{"version":3,"sources":["components/cards/Cards.module.css","components/cards/Cards.jsx","api/index.js","components/chart/chart.jsx","components/countryPicker/countrypicker.jsx","components/Footer/Footer.js","images/logo.png","app.js","index.js","components/Footer/Footer.module.css","App.module.css","components/chart/chart.module.css","components/countryPicker/countrypicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","style","marginTop","url","fetchData","country","a","changeableURL","Axios","get","modifiedData","console","log","fetchDailyDate","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","Footer","footer","App","state","fetchedData","setState","this","image","alt","src","logo","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df6ab6e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2rcre\",\"card\":\"Cards_card__1N7pj\",\"infected\":\"Cards_infected__wcxcq\",\"recovered\":\"Cards_recovered__3R3u8\",\"deaths\":\"Cards_deaths__2xaEy\"};","import React from \"react\"\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\"\nimport CountUp from \"react-countup\"\nimport styles from \"./Cards.module.css\"\nimport cx from \"classnames\"\n\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate}}) => {\n\n    if(!confirmed) {\n        return \"Loading...\"\n    }\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom >Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" style={{marginTop: \"10px\"}}>Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom >Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" style={{marginTop: \"10px\"}}>Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom >Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\" style={{marginTop: \"10px\"}}>Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards","import Axios from \"axios\"\n\nconst url = \"https://covid19.mathdro.id/api\"\n\n//For number of cases\nexport const fetchData = async (country) => {\n\n    let changeableURL = url\n\n    if(country) {\n        changeableURL = `${url}/countries/${country}`\n    }\n\n    try {\n\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await Axios.get(changeableURL)\n\n        const modifiedData = { confirmed, recovered, deaths, lastUpdate }\n        return modifiedData\n\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n//For dates of charts\nexport const fetchDailyDate = async () => {\n    try {\n        \n        const {data} = await Axios.get(`${url}/daily`)\n        \n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n\n        return modifiedData\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n//For list of countries\nexport const fetchCountries = async () => {\n    try {\n\n        const {data: {countries}} = await Axios.get(`${url}/countries`)\n        return countries.map((country) => country.name)\n\n    } catch(error) {\n        console.log(error)\n    }\n}\n\n\n","import React, { useState, useEffect } from \"react\"\nimport { fetchDailyDate } from \"../../api/index\"\nimport { Line, Bar } from \"react-chartjs-2\"\n\nimport styles from \"./chart.module.css\"\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyDate())\n        }\n\n        fetchAPI()\n    }, [])\n\n    const lineChart = (\n        dailyData.length ? <Line\n            data={{\n                labels: dailyData.map(({ date }) => date),\n                datasets: [{\n                    data: dailyData.map(({ confirmed }) => confirmed),\n                    label: 'Infected',\n                    borderColor: \"#3333ff\",\n                    fill: true,\n                }, {\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label: 'Deaths',\n                    borderColor: \"red\",\n                    backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n                    fill: true,\n                }]\n            }}\n        /> : null\n    )\n\n    const barChart = (\n        confirmed ? (\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current state in ${country}` }\n                }}\n            />\n        ) : null\n    )\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './countrypicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\nexport default CountryPicker;\n","import React from \"react\"\nimport styles from \"./Footer.module.css\"\n\nconst Footer=()=>{\n    return (\n        <div className={styles.footer}>\n            <h5 className={styles.text}>\n                COVID-19 TRACKER APP &copy;Harshit-2021\n            </h5>\n        </div>\n    )\n}\n\nexport default Footer","export default __webpack_public_path__ + \"static/media/logo.9e5d4fc7.png\";","import React from 'react';\n\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css'\nimport { fetchData } from './api'\nimport Footer from \"./components/Footer/Footer\"\n\nimport logo from './images/logo.png';\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({ data: fetchedData });\n    }\n\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n\n        this.setState({ data: fetchedData, country: country });\n    }\n\n\n\n    render() {\n        const { data, country } = this.state;\n\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} alt=\"COVID-19\" src={logo} />\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country} />\n                <Footer/>\n            </div>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\",\"text\":\"Footer_text__BdXqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__3lAJl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"countrypicker_formControl__798TT\"};"],"sourceRoot":""}